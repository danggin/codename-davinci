name: Netlify Deploy (Pull Request)

on:
  pull_request:
    branches:
      - develop # develop 브랜치에 PR이 열리면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.js 캐시 설정
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 의존성 설치
      - name: Install dependencies
        run: npm install

      # 캐시된 Vite 빌드 복원 (Vite 빌드 캐시 저장)
      - name: Cache Vite build cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('**/vite.config.js') }}
          restore-keys: |
            ${{ runner.os }}-vite-

      # Netlify CLI 캐시 설정
      - name: Cache Netlify CLI
        uses: actions/cache@v3
        with:
          path: ~/.netlify
          key: ${{ runner.os }}-netlify-cli
          restore-keys: |
            ${{ runner.os }}-netlify-

      # Netlify CLI 설치
      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      # 프로젝트 빌드
      - name: Build project
        run: npm run build

      # Netlify로 배포
      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          # Netlify CLI 배포 명령어에 잘못된 하이픈 수정
          DEPLOY_OUTPUT=$(netlify deploy --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID --message "Deploy for PR" --json)
          DEPLOY_URL=$(echo $DEPLOY_OUTPUT | jq -r .deploy_url)
          echo "Deploy URL: $DEPLOY_URL"
          echo "TEST_DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      # PR에 배포 URL을 주석으로 추가
      - name: Add deploy URL to PR comment
        if: github.event_name == 'pull_request'
        run: |
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.MY_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            -d '{"body": "🚀 Test site deployed: '"$TEST_DEPLOY_URL"'"}'
